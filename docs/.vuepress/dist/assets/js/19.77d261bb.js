(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{228:function(e,r,t){"use strict";t.r(r);var n=t(6),o=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[e._v("#")]),e._v(" 算法")]),e._v(" "),t("ul",[t("li",[e._v("算法题[0, 2, 3, 0, 5, 0, 0]将 0 全部移动到后面去")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二维数组中的查找"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/recover-a-tree-from-preorder-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("从先序遍历还原二叉树"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("单项链表是否存在环"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/spiral-matrix-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("螺旋数组"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/",target:"_blank",rel:"noopener noreferrer"}},[e._v("青蛙跳台阶"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的最大深度"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-subarray/",target:"_blank",rel:"noopener noreferrer"}},[e._v("连续子数组的最大和"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/minimum-path-sum/",target:"_blank",rel:"noopener noreferrer"}},[e._v("最小路径和"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/invert-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的左右子树交换代码实现"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二树叉，找出两节点的最近公共祖先"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=o.exports}}]);